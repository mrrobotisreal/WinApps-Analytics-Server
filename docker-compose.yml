#Testing out something new...
services:
  # ──────────────────────────── core API / dashboard ────────────────────────────
  server:
    build:
      context: .
      target: build-server
    command: ["/app/server"]
    ports:
      - "17177:17177"
    environment:
      - POSTGRES_URL=postgres://postgres:postgres@db:5432/analytics?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - TLS_CERT=/etc/letsencrypt/live/analytics.winapps.io/fullchain.pem
      - TLS_KEY=/etc/letsencrypt/live/analytics.winapps.io/privkey.pem
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on: [db, redis]

  # ──────────────────────────── lightweight ingest (HTTP → Kafka) ───────────────
  ingest:
    build:
      context: .
      target: build-ingest
    command: ["/app/ingest"]
    user: root
    ports:
      - "17178:8080"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - TLS_CERT=/etc/letsencrypt/live/analytics.winapps.io/fullchain.pem
      - TLS_KEY=/etc/letsencrypt/live/analytics.winapps.io/privkey.pem
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on: [kafka]

  # ──────────────────────────── Kafka → Redis/Postgres consumer ────────────────
  consumer:
    build:
      context: .
      target: build-consumer
    command: ["/app/consumer"]
    depends_on: [kafka, redis, db]
    environment:
      - KAFKA_BROKERS=kafka:9092
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgres://postgres:postgres@db:5432/analytics?sslmode=disable

  # ──────────────────────────── stateful backing stores ─────────────────────────
  db:
    image: postgres:16
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=analytics
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7

  # ──────────────────────────── Kafka stack (dev-sized) ─────────────────────────
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000

  kafka:
    image: confluentinc/cp-zookeeper:latest
    depends_on: [zookeeper]
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1

volumes:
  db-data:

#version: "3.9"
#services:
#  server:
#    build: .
#    ports:
#      - "17177:17177"
#    environment:
#      - POSTGRES_URL=postgres://postgres:postgres@db:5432/analytics?sslmode=disable
#      - REDIS_URL=redis://redis:6379
#      - TLS_CERT=/etc/letsencrypt/live/analytics.winapps.io/fullchain.pem
#      - TLS_KEY=/etc/letsencrypt/live/analytics.winapps.io/privkey.pem
#    volumes:
#      - /etc/letsencrypt/live/analytics.winapps.io:/etc/letsencrypt/live/analytics.winapps.io:ro
#    depends_on:
#      - db
#      - redis
#
#  db:
#    image: postgres:16
#    environment:
#      - POSTGRES_PASSWORD=postgres # TODO: this will be changed, just for testing
#      - POSTGRES_DB=analytics
#    volumes:
#      - db-data:/var/lib/postgresql/data
#
#  redis:
#    image: redis:7
#
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.6
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#
#  kafka:
#    image: confluentinc/cp-kafka:7.6
#    depends_on: [ zookeeper ]
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#
#volumes:
#  db-data: